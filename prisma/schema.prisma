generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  User
  SuperAdmin
  // @@schema("public")

  @@map("role")
}

model User {
  id           String   @id @default(cuid())
  bonusBalance Int      @default(0) @map("bonus_balance")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")
  username     String   @unique
  password     String   @map("password")
  email        String   @unique
  // avatar       String?  @map("avatar")
  // emailVerified Boolean  @default(false) @map("email_verified")
  // lastLoginAt   DateTime @default(now()) @map("last_login_at")

  roles UserRole[]

  @@map("user")
}

model UserRole {
  userId String @map("user_id")
  role   Role   @map("role")
  user   User   @relation(fields: [userId], references: [id])

  @@id([userId, role])
  @@index([userId], type: Hash)
  @@map("user_role")
}

model ProductType {
  id   String @id @default(cuid())
  name String
  slug String @unique

  products Product[]

  @@map("product_type")
}

model ProductCategory {
  id   String @id @default(cuid())
  name String
  slug String @unique

  products Product[]

  @@map("product_category")
}

model Product {
  id                  String   @id @default(cuid())
  name                String
  price               Float
  slug                String
  imageUrl            String
  additionalImageUrls String[]

  productType     ProductType     @relation(fields: [productTypeId], references: [id])
  productCategory ProductCategory @relation(fields: [productCategoryId], references: [id])

  productTypeId     String @map("product_type_id")
  productCategoryId String @map("product_category_id")

  @@map("product")
}
